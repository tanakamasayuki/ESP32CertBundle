name: Update Certificate Bundle

on:
  schedule:
    - cron: "0 0 1 * *" # Run monthly on the 1st at 00:00 UTC
  workflow_dispatch:
    inputs:
      force_release:
        description: "Force a release even if no bundle changes are detected"
        required: false
        default: "false"
      version_level:
        description: "Version component to bump when forcing a release (major, minor, patch)"
        required: false
        default: "patch"

permissions:
  contents: write

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: pip install cryptography

      - name: Refresh bundle header
        run: python tools/update_bundle.py

      - name: Detect changes
        id: diff
        run: |
          if git diff --quiet src/esp32_cert_bundle.h; then
            echo "bundle_changed=false" >> "$GITHUB_OUTPUT"
          else
            echo "bundle_changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Determine release mode
        id: release_mode
        run: |
          FORCE="${{ github.event.inputs.force_release || 'false' }}"
          if [ "$FORCE" = "true" ]; then
            echo "force_release=true" >> "$GITHUB_OUTPUT"
          else
            echo "force_release=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Decide whether to proceed
        id: proceed
        run: |
          if [ "${{ steps.diff.outputs.bundle_changed }}" = "true" ] || [ "${{ steps.release_mode.outputs.force_release }}" = "true" ]; then
            echo "run_release=true" >> "$GITHUB_OUTPUT"
          else
            echo "run_release=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Stop when no updates are required
        if: steps.proceed.outputs.run_release == 'false'
        run: echo "No updates detected and force_release disabled. Skipping remainder of workflow."

      - name: Bump version
        if: steps.proceed.outputs.run_release == 'true'
        id: version
        run: |
          LEVEL="${{ github.event.inputs.version_level || 'patch' }}"
          VERSION=$(python tools/bump_version.py --level "$LEVEL")
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Stage files
        if: steps.proceed.outputs.run_release == 'true'
        run: |
          git add library.properties
          if git ls-files --error-unmatch src/esp32_cert_bundle.h >/dev/null 2>&1; then
            git add src/esp32_cert_bundle.h
          fi

      - name: Commit changes
        if: steps.proceed.outputs.run_release == 'true'
        run: |
          git commit -m "Update bundle ${{ steps.version.outputs.version }}" || echo "No changes to commit."

      - name: Create tag and push
        if: steps.proceed.outputs.run_release == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git tag "v${{ steps.version.outputs.version }}" || git tag -f "v${{ steps.version.outputs.version }}"
          git push origin HEAD:main
          git push origin "v${{ steps.version.outputs.version }}" --force

      - name: Publish release
        if: steps.proceed.outputs.run_release == 'true'
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: v${{ steps.version.outputs.version }}
          body: |
            Automated certificate bundle update.

            - Bundle refreshed by update-bundle workflow.
            - Library version bumped to v${{ steps.version.outputs.version }}.
